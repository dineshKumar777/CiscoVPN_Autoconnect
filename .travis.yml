language: csharp
solution: "./Autoit_CiscoVPN.sln"

after_success:
       - echo $TRAVIS_BUILD_DIR
       - mkdir ReleasePackage
       - cd $TRAVIS_BUILD_DIR/Autoit_CiscoVPN/bin/Release/
       - cp -v Autoit_CiscoVPN.exe AutoItX3.Assembly.dll AutoItX3.dll Autoit_CiscoVPN.exe.config $TRAVIS_BUILD_DIR/ReleasePackage
       - cd $TRAVIS_BUILD_DIR
       - zip ReleasePackage $TRAVIS_BUILD_DIR
       - ls -R $TRAVIS_BUILD_DIR/ReleasePackage
       - ls -a $TRAVIS_BUILD_DIR/ReleasePackage
       - ls -lh
       - echo "package successful"
       # CREATE GIT TAG
       - git config --global user.email "builds@travis-ci.com"
       - git config --global user.name "Travis CI"
       - export GIT_TAG=build-$TRAVIS_BRANCH-$(date -u "+%Y-%m-%d")-$TRAVIS_BUILD_NUMBER
       - echo -n $GIT_TAG > public/version
       - git commit -m "Set build VERSION number" public/version
       - git tag $GIT_TAG -a -m "Generated tag from TravisCI build $TRAVIS_BUILD_NUMBER"
       # git push --quiet https://$GITHUBKEY@github.com/dev-confidence/example-backend-api $GIT_TAG > /dev/null 2>&1
       - git push origin $GIT_TAG
       
branches:
  except:
    - /^build-[0-9a-z\-]*/
       
jobs:
  include:
    - stage: GitHub Release
      script: echo "Deploying to GitHub releases ..."
      deploy:
        provider: releases
        api_key: $GITHUB_OAUTH_TOKEN
        skip_cleanup: true
        on:
          tags: true

     

